name: Manual Build
on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]
        include:
          - os: ubuntu-latest
            os_short: linux
          - os: ubuntu-20.04
            os_short: oldlinux

    name: Build Project ${{ matrix.os_short }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Environment
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          
      - name: Install Dependencies
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          # sudo apt-get install -y g++-multilib gcc-multilib
          sudo apt-get install -y git python3-pip
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Prepare Alliedmodders Directory
        run: |
          mkdir alliedmodders

      - name: Prepare Sourcemod
        run: |
          cd alliedmodders
          git clone --recursive https://github.com/alliedmodders/sourcemod -b 1.11-dev

      - name: Prepare L4D SDK
        run: |
          cd alliedmodders
          git clone --mirror https://github.com/alliedmodders/hl2sdk hl2sdk-proxy-repo
          git clone hl2sdk-proxy-repo hl2sdk-l4d2 -b l4d2
          git clone hl2sdk-proxy-repo hl2sdk-l4d -b l4d
          
      - name: Prepare Metamod Source
        run: |
          cd alliedmodders
          git clone https://github.com/alliedmodders/metamod-source mmsource-1.10 -b 1.10-dev

      - name: Install AMBuild
        run: |
          cd alliedmodders
          git clone https://github.com/alliedmodders/ambuild
          pip install ./ambuild

      - name: Configure AMBuild
        run: |
          cd extension
          mkdir build
          cd build
          python3 ../configure.py --hl2sdk-root=../../alliedmodders --sm-path=../../alliedmodders/sourcemod --mms-path=../../alliedmodders/mmsource-1.10 --sdks l4d,l4d2

      - name: Run AMBuild
        run: |
          cd extension
          cd build
          ambuild

      - name: Copy to addons directory
        run: |
          cp -r /home/runner/work/Left4SendProxy/Left4SendProxy/extension/build/package/addons/sourcemod/extensions /home/runner/work/Left4SendProxy/Left4SendProxy/addons/sourcemod

      - name: Upload Binary (Package)
        uses: actions/upload-artifact@v2
        with:
          name: sendproxy-${{ matrix.os_short }}
          path: /home/runner/work/Left4SendProxy/Left4SendProxy/addons

  release:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest]
        include:
          - os: ubuntu-latest
            os_short: linux
          - os: ubuntu-20.04
            os_short: oldlinux

    name: Create Release ${{ matrix.os_short }}
    needs: build
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: sendproxy-${{ matrix.os_short }}
          path: /tmp/Left4SendProxy

      - name: Get latest tag
        id: tag
        run: |
          echo "TAG=$(curl -s "https://api.github.com/repos/${{ github.repository }}/tags" | jq -r ".[0].name")" >> $GITHUB_ENV

      - name: Zip sourcemod directory
        run: (cd /tmp/Left4SendProxy/sourcemod/ && zip -r /tmp/${{ matrix.os_short }}_release.zip .)

        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          files: /tmp/${{ matrix.os_short }}_release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
